# Generated by Django 3.2 on 2021-08-23 01:36

from django.db import migrations, models
import django.db.models.deletion
import formularios.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=254, verbose_name='Nombre del país')),
                ('phone_code', models.CharField(max_length=5, verbose_name='Código número telefónico')),
            ],
            options={
                'verbose_name': 'País',
                'verbose_name_plural': 'Paises',
            },
        ),
        migrations.CreateModel(
            name='Modalidad',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=120, verbose_name='Modalidad')),
            ],
            options={
                'verbose_name': 'Modalidad',
                'verbose_name_plural': 'Modalidad',
            },
        ),
        migrations.CreateModel(
            name='Nivel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=30, verbose_name='Nivel')),
            ],
            options={
                'verbose_name': 'Nivel',
                'verbose_name_plural': 'Nivel',
            },
        ),
        migrations.CreateModel(
            name='Propuesta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=120, verbose_name='Propuesta')),
            ],
            options={
                'verbose_name': 'Propuesta',
                'verbose_name_plural': 'Propuesta',
            },
        ),
        migrations.CreateModel(
            name='Tiposolicitud',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=30, verbose_name='Tipo de solicitud')),
            ],
            options={
                'verbose_name': 'Tipo de solicitud',
                'verbose_name_plural': 'TIpo de solicitud',
            },
        ),
        migrations.CreateModel(
            name='TypeDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=30, verbose_name='Tipo de documento')),
            ],
            options={
                'verbose_name': 'Tipo de documento',
                'verbose_name_plural': 'TIpo de documentos',
            },
        ),
        migrations.CreateModel(
            name='Torneo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(blank=True, max_length=20, null=True, verbose_name='Correo *')),
                ('name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Nombres y Aepllidos del integrante de la agrupación que hará las veces de representante (si aplica) y/0 participante: *')),
                ('agrupacion', models.CharField(blank=True, max_length=100, null=True, verbose_name='Nombre de la agrupación (si aplica)')),
                ('seudonimo', models.CharField(blank=True, max_length=100, null=True, verbose_name='Seudónimo (si aplica):')),
                ('identification', models.CharField(blank=True, max_length=100, null=True, verbose_name='Número de identificación: *')),
                ('expedicion', models.CharField(blank=True, max_length=100, null=True, verbose_name='Lugar de Expedición: *')),
                ('country', models.CharField(blank=True, max_length=100, null=True, verbose_name='País de residencia: *')),
                ('region', models.CharField(blank=True, max_length=100, null=True, verbose_name='Ciudad de residencia: *')),
                ('city', models.CharField(blank=True, max_length=100, null=True, verbose_name='Municipio')),
                ('adress', models.CharField(blank=True, max_length=100, null=True, verbose_name='Dirección residencia:')),
                ('phone', models.CharField(blank=True, max_length=100, null=True, verbose_name='Teléfono fijo:')),
                ('phone_movil', models.CharField(blank=True, max_length=100, null=True, verbose_name='Teléfono celular: *')),
                ('obra1', models.CharField(blank=True, max_length=100, null=True, verbose_name='Escriba el nombre de la obra N°1 y/o arreglo que presentará al concurso según lo solicitado en las bases: (No Aplica para las modalidades de, Pareja de Baile y Copleros). ')),
                ('obra2', models.CharField(blank=True, max_length=100, null=True, verbose_name='Escriba el nombre de la obra N°2 y/o arreglo que presentará al concurso según lo solicitado en las bases: (No Aplica para las modalidades de, Pareja de Baile y Copleros).')),
                ('archivo', models.FileField(blank=True, null=True, upload_to='torneo/file', validators=[formularios.models.file_size], verbose_name='Seleccione una foto artística haciendo clic en agregar archivo - Por favor ADJUNTE una fotografía artística digital ya sea a color o blanco y negro tamaño mínimo 800 x 600 Pixeles en una resolución mínima de 200 dpi.')),
                ('archivo1', models.FileField(blank=True, null=True, upload_to='torneo/file', validators=[formularios.models.file_size], verbose_name='Cargar el Formulario N°1 - Inscripción al 53° Torneo Internacional del Joropo "MIGUEL ÁNGEL MARTÍN" totalmente diligenciado con los siguientes documentos: Fotocopias de la Cédula ciudadanía, extranjería y/o pasaporte del representante y de los integrantes según sea la modalidad y la certificación de residencia de mínimo 3 años emitida por la Alcaldía del municipio respectivo, o las juntas de acción comunal. (aplica solo para los participantes que se presenten por el departamento del Meta). Lo anterior se Adjunta en un solo archivo en formato PDF. *')),
                ('link', models.CharField(blank=True, max_length=100, null=True, verbose_name='Adjuntar el link del archivo de wetranfer donde envia el audio formato punto wav, mp3 etc... y vídeo y/o videos (mínimo una cámara máximo tres cámaras grabando simultáneamente) FHD, 1080p o superior de la propuesta según sea la modalidad seleccionada: *')),
                ('archivo2', models.FileField(blank=True, null=True, upload_to='torneo/file', validators=[formularios.models.file_size], verbose_name='sdsd')),
                ('archivo3', models.FileField(blank=True, null=True, upload_to='torneo/file', validators=[formularios.models.file_size], verbose_name=' Los participantes de las modalidades de Conjunto de Música Tradicional llanera y/o Ensambles Nuevos Formatos deberán enviar una breve, pero sólida justificación escrita de su obra, que incluya: Datos de la obra (forma y estilo), intención y/o concepto musical desarrollado y argumentar el ¿Porqué? del repertorio seleccionado. Esta podrá ser utilizada para presentar la obra ante el público por redes y medios de comunicación. Adjuntar el documento en un solo PDF. ')),
                ('archivo4', models.FileField(blank=True, null=True, upload_to='torneo/file', validators=[formularios.models.file_size], verbose_name='Los participantes de las modalidades de Golpe Inédito, Pasaje Inédito, Poema Inédito, deberán enviar una (1) copia del texto de la obra, escrita en computador en letra Arial 12, marcada y firmada únicamente con el seudónimo del compositor. Adjuntar el documento en un solo PDF.  ')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modalidad', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='formularios.modalidad', verbose_name='Modalidad en la que participará: *')),
                ('propuesta', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='formularios.propuesta', verbose_name='Propuesta: *')),
                ('type_document', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='formularios.typedocument', verbose_name='Tipo de identificación: *')),
            ],
            options={
                'verbose_name': 'Torneo del joropo',
                'verbose_name_plural': 'Torneo del joropo',
            },
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=254, verbose_name='Nombre del departamento')),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='formularios.country', verbose_name='País')),
            ],
            options={
                'verbose_name': 'Departamento',
                'verbose_name_plural': 'Departamentos',
            },
        ),
        migrations.CreateModel(
            name='Pqrsd',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True, verbose_name='2.Nombre del remitente')),
                ('last_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='3.Apellidos del remitente')),
                ('identification', models.CharField(blank=True, max_length=30, null=True, verbose_name='5.Identificación')),
                ('email', models.EmailField(blank=True, max_length=30, null=True, verbose_name='6.Correo electrónico')),
                ('phone', models.CharField(blank=True, max_length=30, null=True, verbose_name='7.Identificación')),
                ('asunto', models.CharField(blank=True, max_length=100, null=True, verbose_name='8.Asunto de solicitud')),
                ('solicitud', models.TextField(blank=True, max_length=2000, null=True, verbose_name='9.Descripción Solicitud')),
                ('archivo', models.FileField(blank=True, null=True, upload_to='pqrsd/file', verbose_name='10.Archivo adjunto')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('tiposolicitud', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='formularios.tiposolicitud', verbose_name='1.Tipo de solicitud')),
                ('type_document', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='formularios.typedocument', verbose_name='4.Tipo de documento')),
            ],
            options={
                'verbose_name': 'Informe PQRSD',
                'verbose_name_plural': 'Informe PQRSD',
            },
        ),
        migrations.CreateModel(
            name='EncuestaTransparencia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('encontro', models.CharField(blank=True, choices=[('SI', 'SI'), ('NO', 'NO')], max_length=2, null=True, verbose_name='1. Encontró la información que buscaba?:')),
                ('noencontro', models.CharField(blank=True, max_length=100, null=True, verbose_name='2. Si no la encontró especifique en este espacio ¿qué buscaba?')),
                ('facil', models.CharField(blank=True, choices=[('SI', 'SI'), ('NO', 'NO')], max_length=2, null=True, verbose_name='3. ¿Le resultó fácil la ruta de acceso a la información?:')),
                ('sugerencia', models.CharField(blank=True, max_length=100, null=True, verbose_name='5. Si tiene alguna sugerencia escribanos en el siguiente espacio, recuerde que su opinión es muy importante para mejorar nuestro servicio.')),
                ('nivel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='formularios.nivel', verbose_name='4. ¿A nivel general, cómo define la información contenida en la página web?')),
            ],
            options={
                'verbose_name': 'Encuesta de satisfacción',
                'verbose_name_plural': 'Encuesta de satisfacción',
            },
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=254, verbose_name='Nombre municipio')),
                ('state', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='formularios.region', verbose_name='Departamento')),
            ],
            options={
                'verbose_name': 'Municipio',
                'verbose_name_plural': 'Municipios',
            },
        ),
    ]
